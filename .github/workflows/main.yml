name: Doggo Dec19 CI Workflow

on: [push]

jobs:
  setup-test-build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.4'
          cache: true

      - name: Fetch Flutter Dependencies
        run: flutter pub get

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Fetch Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install docker

      - name: Inject secrets
        run: echo "const String dogApiKey = '${{ secrets.DOG_API_KEY }}';" >> lib/config/config.dart

      # We start this image now to ensure its all spooled up and ready when we perform the integration testing
      # - Rather than just before the integration tests happen, when it is actually needed.
      - name: Run Mock API Docker Image
        run: python scripts/docker_ctrl.py start ghcr.io/mittons/mockdogapidec19:1.0 3019 8019

      - name: Install ChromeDriver
        run: |
          wget -N https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/120.0.6099.71/linux64/chromedriver-linux64.zip -P ~/
          unzip ~/chromedriver-linux64.zip -d ~/
          rm ~/chromedriver-linux64.zip
          sudo mv -f ~/chromedriver-linux64 /usr/local/bin/chromedriver
          sudo chown root:root /usr/local/bin/chromedriver
          sudo chmod 0755 /usr/local/bin/chromedriver        

      - name: Run Flutter Unit/Widget Tests
        run: flutter test

      - name: Run Flutter Integration Tests
        run: |
          chromedriver --port=4444 --trace-buffer-size=100000 &
          flutter drive \
            --verbose-system-logs \
            -d web-server \
            --driver=test_driver/integration_test.dart \
            --target=integration_test/app_test.dart \
            --dart-define=CI=true

      - name: Build Flutter Web Application
        run: flutter build web --release --base-href=/DoggoDec19/

      - name: Deploy to gh-pages
        run: |
          cd build/web


          git init

          git config user.name = "${{ github.actor }}"
          git config user.email = "${{ github.actor }}@users.noreply.github.com"


          git add .
          git commit -m "Deploy to gh-pages"

          # Add the github repository as a remote
          git remote add gh-token "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

          # Force push from the build/web folder in the current gh-actions runner environment
          # to the repo's gh-pages branch. (All previous history on the gh-pages
          # branch will be lost, since we are overwriting it.)
          # This is ok since github is not a version control system for builds but a version control system for code
          git push gh-token HEAD:gh-pages --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions. There is no need to create this token.
          